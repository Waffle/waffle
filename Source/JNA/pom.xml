<?xml version="1.0" encoding="UTF-8"?>
<!--

    MIT License

    Copyright (c) 2010-2025 The Waffle Project Contributors: https://github.com/Waffle/waffle/graphs/contributors

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.waffle</groupId>
    <artifactId>waffle</artifactId>
    <version>3.6.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>waffle</name>
    <description>Parent POM for WAFFLE</description>
    <url>https://waffle.github.io/waffle/</url>
    <inceptionYear>2010</inceptionYear>
    <organization>
        <name>com.github.waffle</name>
        <url>https://github.com/waffle/</url>
    </organization>
    <licenses>
        <license>
            <name>MIT</name>
            <url>https://raw.github.com/Waffle/waffle/master/LICENSE</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>dblock</id>
            <name>Daniel Doubrovkine</name>
            <email>dblock@dblock.org</email>
            <url>https://github.com/dblock/</url>
            <organization>dblock</organization>
            <organizationUrl>http://code.dblock.org</organizationUrl>
            <roles>
                <role>Architect</role>
                <role>Developer</role>
            </roles>
            <timezone>-5</timezone>
            <properties>
                <picUrl>https://avatars3.githubusercontent.com/u/542335?s=400</picUrl>
            </properties>
        </developer>
    </developers>
    <contributors>
        <contributor>
            <name>Jeremy Landis</name>
            <email>jeremylandis@hotmail.com</email>
            <url>https://www.linkedin.com/in/jeremy-landis-548b2719</url>
            <organization>hazendaz</organization>
            <organizationUrl>https://github.com/hazendaz</organizationUrl>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-5</timezone>
            <properties>
                <picUrl>https://avatars0.githubusercontent.com/u/975267</picUrl>
            </properties>
        </contributor>
    </contributors>

    <modules>
        <module>waffle-bom</module>
        <module>waffle-bom-jakarta</module>
        <module>waffle-demo</module>
        <module>waffle-demo-jakarta</module>
        <module>waffle-distro</module>
        <module>waffle-distro-jakarta</module>
        <module>waffle-jetty</module>
        <module>waffle-jetty-jakarta</module>
        <module>waffle-jna</module>
        <module>waffle-jna-jakarta</module>
        <module>waffle-shiro</module>
        <!-- <module>waffle-shiro-jakarta</module -->
        <module>waffle-spring-boot2</module>
        <module>waffle-spring-boot3</module>
        <module>waffle-spring-security5</module>
        <module>waffle-spring-security6</module>
        <module>waffle-tests</module>
        <module>waffle-tests-jakarta</module>
        <module>waffle-tomcat9</module>
        <module>waffle-tomcat10</module>
        <module>waffle-tomcat11</module>
    </modules>

    <scm>
        <connection>scm:git:ssh://git@github.com/waffle/waffle.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/waffle/waffle.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/Waffle/waffle</url>
    </scm>
    <issueManagement>
        <system>Github</system>
        <url>https://github.com/Waffle/waffle/issues</url>
    </issueManagement>
    <ciManagement>
        <system>Github</system>
        <url>https://github.com/Waffle/waffle/actions</url>
    </ciManagement>
    <distributionManagement>
        <snapshotRepository>
            <id>central</id>
            <url>https://central.sonatype.com/repository/maven-snapshots/</url>
        </snapshotRepository>
        <site>
            <id>gh-pages-scm</id>
            <name>Waffle GitHub Pages</name>
            <url>scm:git:ssh://git@github.com/Waffle/waffle.git</url>
        </site>
    </distributionManagement>

    <properties>
        <!-- Project Level -->
        <copyright>2025</copyright>

        <!-- Github Token -->
        <github.global.server>github</github.global.server>

        <!-- Remember to adjust this up as you add unit tests -->
        <jacoco.minimum.coverage>0.50</jacoco.minimum.coverage>

        <!-- Maven Settings -->
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>

        <!-- Maven compiler options -->
        <java.version>11</java.version>
        <java.release.version>11</java.release.version>
        <java.test.version>${java.version}</java.test.version>
        <java.test.release.version>${java.release.version}</java.test.release.version>

        <!-- Javadoc Release is strict due to maven bug and automatic module naming; it needs extra help, see examples, later fixed by legacy.mode flag -->
        <javadoc.java.release.version>${java.release.version}</javadoc.java.release.version>
        <javadoc.legacy.mode>true</javadoc.legacy.mode>

        <!-- Legacy compiler options source/target not really needed now (but still used by things like sonar, m2e) -->
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.testSource>${java.test.version}</maven.compiler.testSource>
        <maven.compiler.testTarget>${java.test.version}</maven.compiler.testTarget>

        <maven.compiler.release>${java.release.version}</maven.compiler.release>
        <maven.compiler.testRelease>${java.test.release.version}</maven.compiler.testRelease>

        <!-- Get method parameter names via reflection -->
        <maven.compiler.parameters>true</maven.compiler.parameters>

        <!-- Maven minimum version -->
        <maven.min-version>3.9.9</maven.min-version>

        <!-- Project Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Automatic Module Name for JPMS -->
        <module.name>waffle.parent</module.name>

        <!-- Reproducible Builds -->
        <project.build.outputTimestamp>1748738486</project.build.outputTimestamp>

        <!-- Due to maven bug, fix timestamp -->
        <timestamp>${maven.build.timestamp}</timestamp>

        <!-- Enforcer Jdks Allowed -->
        <allowed.build.jdks note="Allow any 17, 21, 24, 25">[17,18),[21,22),[24,25),[25,26)</allowed.build.jdks>

        <!-- Checkstyle -->
        <checkstyle.config>checkstyle.xml</checkstyle.config>

        <!-- Third Party Versions -->
        <assertj.version>3.27.3</assertj.version>
        <byte-buddy.version>1.17.6</byte-buddy.version>
        <checker.version>3.49.5</checker.version>
        <commons-math.version>3.6.1</commons-math.version>
        <error-prone.version>2.39.0</error-prone.version>
        <j2objc.version>3.0.0</j2objc.version>
        <jmh.version>1.37</jmh.version>
        <jmockit.version>1.56.0</jmockit.version>
        <jopt-simple.version>5.0.4</jopt-simple.version>
        <junit.version>5.13.2</junit.version>
        <spotbugs.version>4.9.3</spotbugs.version>
        <slf4j.version>2.0.17</slf4j.version>

        <!-- Plugins -->
        <antrun.plugin>3.1.0</antrun.plugin>
        <assembly.plugin>3.7.1</assembly.plugin>
        <build-helper.plugin>3.6.1</build-helper.plugin>
        <central-publishing.plugin>0.8.0</central-publishing.plugin>
        <checkstyle.plugin>3.6.0</checkstyle.plugin>
        <clean.plugin>3.5.0</clean.plugin>
        <compiler.plugin>3.14.0</compiler.plugin>
        <coveralls.plugin>4.7.0</coveralls.plugin>
        <dependency.plugin>3.8.1</dependency.plugin>
        <dependency-check.plugin>12.1.3</dependency-check.plugin>
        <deploy.plugin>3.1.4</deploy.plugin>
        <directory.plugin>1.2.1</directory.plugin>
        <enforcer.plugin>3.5.0</enforcer.plugin>
        <formatter.plugin>2.27.0</formatter.plugin>
        <git-commit-id.plugin>9.0.2</git-commit-id.plugin>
        <gpg.plugin>3.2.7</gpg.plugin>
        <htmlcompressor.plugin>2.2.0</htmlcompressor.plugin>
        <impsort.plugin>1.12.0</impsort.plugin>
        <install.plugin>3.1.4</install.plugin>
        <jacoco.plugin>0.8.13</jacoco.plugin>
        <jar.plugin>3.4.2</jar.plugin>
        <javadoc.plugin>3.11.2</javadoc.plugin>
        <jxr.plugin>3.6.0</jxr.plugin>
        <license.plugin>5.0.0</license.plugin>
        <modernizer.plugin>3.1.0</modernizer.plugin>
        <pmd.plugin>3.27.0</pmd.plugin>
        <project-info-reports.plugin>3.9.0</project-info-reports.plugin>
        <release.plugin>3.1.1</release.plugin>
        <resources.plugin>3.3.1</resources.plugin>
        <rewrite.plugin>6.12.1</rewrite.plugin>
        <scm-publish.plugin>3.3.0</scm-publish.plugin>
        <site.plugin>3.21.0</site.plugin>
        <sonar.plugin>5.1.0.4751</sonar.plugin>
        <sortpom.plugin>4.0.0</sortpom.plugin>
        <source.plugin>3.3.1</source.plugin>
        <spotbugs.plugin>4.9.3.2</spotbugs.plugin>
        <spotless.plugin>2.44.5</spotless.plugin>
        <surefire.plugin>3.5.3</surefire.plugin>
        <taglist.plugin>3.2.1</taglist.plugin>
        <versions.plugin>2.18.0</versions.plugin>
        <war.plugin>3.4.0</war.plugin>
        <whitespace.plugin>1.5.0</whitespace.plugin>
        <yuicompressor.plugin>2.2.0</yuicompressor.plugin>

        <!-- Plugin Dependency Versions -->
        <asm.version>9.8</asm.version>
        <build-tools.version>1.4.0</build-tools.version>
        <checkstyle.version>10.26.1</checkstyle.version>
        <extra-enforcer-rules.version>1.10.0</extra-enforcer-rules.version>
        <fluido.version note="Make sure to update in site.xml">2.1.0</fluido.version>
        <htmlcompressor.version>1.11.0</htmlcompressor.version>
        <pmd.version>7.15.0</pmd.version>
        <restrict-imports-enforcer-rule.version>2.6.1</restrict-imports-enforcer-rule.version>
        <yuicompressor.version>2.4.8</yuicompressor.version>

        <!-- Spotbugs Extensions -->
        <bug-pattern.version>1.5.0</bug-pattern.version>
        <findsecbugs.version>1.14.0</findsecbugs.version>
        <sb-contrib.version>7.6.11</sb-contrib.version>

        <!-- Lifecycle Mapping -->
        <lifecycle.version>1.0.0</lifecycle.version>

        <!-- Verification Checks -->
        <error-prone.failOnViolations>-XepAllErrorsAsWarnings</error-prone.failOnViolations>
        <error-prone.skipGeneratedCode>-XepDisableWarningsInGeneratedCode -XepExcludedPaths:.*target/generated-sources/.*</error-prone.skipGeneratedCode>

        <!-- Surefire args for jmockit -->
        <argLine>-javaagent:${settings.localRepository}/com/github/hazendaz/jmockit/jmockit/${jmockit.version}/jmockit-${jmockit.version}.jar -javaagent:${settings.localRepository}/net/bytebuddy/byte-buddy-agent/${byte-buddy.version}/byte-buddy-agent-${byte-buddy.version}.jar</argLine>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy</artifactId>
                <version>${byte-buddy.version}</version>
            </dependency>
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy-agent</artifactId>
                <version>${byte-buddy.version}</version>
            </dependency>

            <dependency>
                <groupId>org.checkerframework</groupId>
                <artifactId>checker-qual</artifactId>
                <version>${checker.version}</version>
            </dependency>

            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <!-- prevent warning: SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder". -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Sonar Needs Following for Scans -->
        <dependency>
            <groupId>com.google.errorprone</groupId>
            <artifactId>error_prone_annotations</artifactId>
            <version>${error-prone.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.j2objc</groupId>
            <artifactId>j2objc-annotations</artifactId>
            <version>${j2objc.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
            <version>${spotbugs.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.hazendaz.jmockit</groupId>
            <artifactId>jmockit</artifactId>
            <version>${jmockit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Performance Testing -->
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <version>${jmh.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
            <version>${jmh.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>${commons-math.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sf.jopt-simple</groupId>
            <artifactId>jopt-simple</artifactId>
            <version>${jopt-simple.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Diff Plug Maven Plugins -->
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>${spotless.plugin}</version>
                    <configuration>
                        <formats>
                            <format>
                                <includes>
                                    <include>**/*.sh</include>
                                    <include>**/*.yml</include>
                                    <include>**/*.yaml</include>
                                </includes>
                                <excludes>
                                    <exclude>**/node_modules/**</exclude>
                                    <exclude>**/target/**</exclude>
                                </excludes>
                                <trimTrailingWhitespace />
                                <endWithNewline />
                                <indent>
                                    <spaces>true</spaces>
                                    <spacesPerTab>2</spacesPerTab>
                                </indent>
                            </format>
                            <format>
                                <includes>
                                    <include>**/*.xml</include>
                                </includes>
                                <excludes>
                                    <exclude>**/node_modules/**</exclude>
                                    <exclude>**/target/**</exclude>
                                    <exclude>**/.pmdruleset.xml</exclude>
                                </excludes>
                                <trimTrailingWhitespace />
                                <endWithNewline />
                                <indent>
                                    <spaces>true</spaces>
                                    <spacesPerTab>4</spacesPerTab>
                                </indent>
                            </format>
                        </formats>
                    </configuration>
                </plugin>

                <!-- Core plugins -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${clean.plugin}</version>
                    <configuration>
                        <!-- Delete all from target but not target itself -->
                        <excludeDefaultDirectories>true</excludeDefaultDirectories>
                        <filesets>
                            <fileset>
                                <directory>${project.build.directory}</directory>
                                <includes>
                                    <include>**/*</include>
                                </includes>
                            </fileset>
                        </filesets>
                        <force>true</force>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${compiler.plugin}</version>
                    <configuration>
                        <!-- Error Prone Configuration -->
                        <annotationProcessorPaths>
                            <path>
                                <groupId>com.google.errorprone</groupId>
                                <artifactId>error_prone_core</artifactId>
                                <version>${error-prone.version}</version>
                            </path>
                        </annotationProcessorPaths>

                        <compilerArgs>
                            <compilerArg>-XDcompilePolicy=simple</compilerArg>
                            <compilerArg>--should-stop=ifError=FLOW</compilerArg>
                            <compilerArg>-Xplugin:ErrorProne ${error-prone.failOnViolations} ${error-prone.skipGeneratedCode}</compilerArg>
                        </compilerArgs>

                        <showDeprecation>true</showDeprecation>
                        <showWarnings>true</showWarnings>

                        <!-- Slightly faster builds, see https://issues.apache.org/jira/browse/MCOMPILER-209 -->
                        <useIncrementalCompilation>false</useIncrementalCompilation>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${deploy.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${enforcer.plugin}</version>
                    <configuration>
                        <rules>
                            <bannedDependencies>
                                <message>Do not use obsolete logging libraries.  Prefer slf4j/logback and override slf4j libraries for replacements.  Use only commons-logging when needed and no overrides from any of the major logging providers.</message>
                                <excludes>
                                    <exclude>log4j:log4j</exclude>
                                    <exclude>org.apache.logging.log4j:log4j-jcl</exclude>
                                    <exclude>org.slf4j:jcl-over-slf4j</exclude>
                                    <exclude>org.slf4j:slf4j-log4j12</exclude>
                                    <exclude>org.springframework:spring-jcl</exclude>
                                </excludes>
                            </bannedDependencies>
                            <banDuplicatePomDependencyVersions />
                            <enforceBytecodeVersion>
                                <maxJdkVersion>${java.version}</maxJdkVersion>
                                <ignoredScopes>provided,test</ignoredScopes>
                            </enforceBytecodeVersion>
                            <!-- TODO: Skip convergence due to separate parent until such time .net is moved to new repo -->
                            <!--<reactorModuleConvergence />-->
                            <requireJavaVersion>
                                <message>Please upgrade java and configure 'JAVA_HOME'.</message>
                                <version>${allowed.build.jdks}</version>
                            </requireJavaVersion>
                            <requireMavenVersion>
                                <message>Please upgrade maven and configure 'M2_HOME'.</message>
                                <version>[${maven.min-version},)</version>
                            </requireMavenVersion>
                            <requirePluginVersions>
                                <message>[ERROR] Best Practice is to always define plugin versions!</message>
                                <banLatest>true</banLatest>
                                <banRelease>true</banRelease>
                                <banSnapshots>true</banSnapshots>
                                <phases>clean,deploy,site</phases>
                            </requirePluginVersions>
                            <restrictImports>
                                <includeTestCode>true</includeTestCode>
                                <groups>
                                    <group>
                                        <reason>Don't allow obsolete logging</reason>
                                        <bannedImports>
                                            <bannedImport>java.util.logging.**</bannedImport>
                                            <bannedImport>org.apache.commons.logging.**</bannedImport>
                                            <bannedImport>org.apache.log4j.**</bannedImport>
                                        </bannedImports>
                                    </group>
                                </groups>
                            </restrictImports>
                        </rules>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>extra-enforcer-rules</artifactId>
                            <version>${extra-enforcer-rules.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>de.skuzzle.enforcer</groupId>
                            <artifactId>restrict-imports-enforcer-rule</artifactId>
                            <version>${restrict-imports-enforcer-rule.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${gpg.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${install.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${resources.plugin}</version>
                    <configuration>
                        <!-- Defaults to source, use resources as this is a resource -->
                        <propertiesEncoding>${project.build.resourceEncoding}</propertiesEncoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-publish-plugin</artifactId>
                    <version>${scm-publish.plugin}</version>
                    <configuration>
                        <checkoutDirectory>${user.home}/maven-sites/${project.name}</checkoutDirectory>
                        <!-- no need for site:stage, use target/site or target/checkout/target/site on release -->
                        <content>${project.reporting.outputDirectory}</content>
                        <scmBranch>gh-pages</scmBranch>
                        <tryUpdate>true</tryUpdate>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${site.plugin}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addBuildEnvironmentEntries>false</addBuildEnvironmentEntries>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Automatic-Module-Name>${module.name}</Automatic-Module-Name>
                                <Copyright>${copyright}</Copyright>
                                <Git-Revision>${git.commit.id}</Git-Revision>
                                <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                                <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
                                <X-Compile-Release-JDK>${maven.compiler.release}</X-Compile-Release-JDK>
                            </manifestEntries>
                        </archive>
                        <!-- don't deploy site with maven-site-plugin (instead use scm publish during release) -->
                        <skipDeploy>true</skipDeploy>
                    </configuration>
                    <dependencies>
                        <!-- For reporting only of versions -->
                        <dependency>
                            <groupId>org.apache.maven.skins</groupId>
                            <artifactId>maven-fluido-skin</artifactId>
                            <version>${fluido.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.plugin}</version>
                    <configuration>
                        <excludes>
                            <exclude>**/*LoadTest.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <!-- Build Plugins -->
                <plugin>
                    <groupId>io.github.git-commit-id</groupId>
                    <artifactId>git-commit-id-maven-plugin</artifactId>
                    <version>${git-commit-id.plugin}</version>
                    <configuration>
                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
                        <!-- Prevent issues, see https://github.com/ktoso/maven-git-commit-id-plugin/issues/61 -->
                        <gitDescribe>
                            <always>true</always>
                        </gitDescribe>
                        <runOnlyOnce>true</runOnlyOnce>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper.plugin}</version>
                </plugin>
                <!-- Packaging types / tools -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${jar.plugin}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addBuildEnvironmentEntries>false</addBuildEnvironmentEntries>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Automatic-Module-Name>${module.name}</Automatic-Module-Name>
                                <Copyright>${copyright}</Copyright>
                                <Git-Revision>${git.commit.id}</Git-Revision>
                                <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                                <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
                                <X-Compile-Release-JDK>${maven.compiler.release}</X-Compile-Release-JDK>
                            </manifestEntries>
                        </archive>
                        <skipIfEmpty>true</skipIfEmpty>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${war.plugin}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addBuildEnvironmentEntries>false</addBuildEnvironmentEntries>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Automatic-Module-Name>${module.name}</Automatic-Module-Name>
                                <Copyright>${copyright}</Copyright>
                                <Git-Revision>${git.commit.id}</Git-Revision>
                                <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                                <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
                                <X-Compile-Release-JDK>${maven.compiler.release}</X-Compile-Release-JDK>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <!-- Reporting plugins -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${checkstyle.plugin}</version>
                    <configuration>
                        <configLocation>${checkstyle.config}</configLocation>
                        <failOnViolation>false</failOnViolation>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <violationSeverity>info</violationSeverity>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${javadoc.plugin}</version>
                    <configuration>
                        <additionalOptions>
                            <additionalOption>-html5</additionalOption>
                        </additionalOptions>
                        <archive>
                            <manifest>
                                <addBuildEnvironmentEntries>false</addBuildEnvironmentEntries>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Automatic-Module-Name>${module.name}</Automatic-Module-Name>
                                <Copyright>${copyright}</Copyright>
                                <Git-Revision>${git.commit.id}</Git-Revision>
                                <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                                <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
                                <X-Compile-Release-JDK>${maven.compiler.release}</X-Compile-Release-JDK>
                            </manifestEntries>
                        </archive>
                        <!-- TODO: Tests do not have public or protected items and will cause failure if not set to false here! -->
                        <failOnError>false</failOnError>
                        <notimestamp>true</notimestamp>
                        <quiet>true</quiet>
                        <release>${javadoc.java.release.version}</release>
                        <source>${javadoc.java.release.version}</source>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${pmd.plugin}</version>
                    <configuration>
                        <analysisCache>true</analysisCache>
                        <failOnViolation>false</failOnViolation>
                        <printFailingErrors>true</printFailingErrors>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-core</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-groovy</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-html</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-java</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-javascript</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-jsp</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-kotlin</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-xml</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- Tools -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${antrun.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${assembly.plugin}</version>
                    <configuration>
                        <descriptors>
                            <descriptor>${project.basedir}/src/assembly/assembly.xml</descriptor>
                        </descriptors>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${dependency.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${release.plugin}</version>
                    <configuration>
                        <addSchema>false</addSchema>
                        <arguments>-Daether.checksums.algorithms=SHA-512,SHA-256,SHA-1,MD5</arguments>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <releaseProfiles>release</releaseProfiles>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${source.plugin}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addBuildEnvironmentEntries>false</addBuildEnvironmentEntries>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Automatic-Module-Name>${module.name}</Automatic-Module-Name>
                                <Copyright>${copyright}</Copyright>
                                <Git-Revision>${git.commit.id}</Git-Revision>
                                <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
                                <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
                                <X-Compile-Release-JDK>${maven.compiler.release}</X-Compile-Release-JDK>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>

                <!-- External Tools -->
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs.plugin}</version>
                    <configuration>
                        <effort>max</effort>
                        <includeTests>true</includeTests>
                        <failOnError>false</failOnError>
                        <plugins>
                            <plugin>
                                <groupId>com.mebigfatguy.sb-contrib</groupId>
                                <artifactId>sb-contrib</artifactId>
                                <version>${sb-contrib.version}</version>
                            </plugin>
                            <plugin>
                                <groupId>com.h3xstream.findsecbugs</groupId>
                                <artifactId>findsecbugs-plugin</artifactId>
                                <version>${findsecbugs.version}</version>
                            </plugin>
                            <plugin>
                                <groupId>jp.skypencil.findbugs.slf4j</groupId>
                                <artifactId>bug-pattern</artifactId>
                                <version>${bug-pattern.version}</version>
                            </plugin>
                        </plugins>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.github.spotbugs</groupId>
                            <artifactId>spotbugs</artifactId>
                            <version>${spotbugs.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>com.github.hazendaz.maven</groupId>
                    <artifactId>htmlcompressor-maven-plugin</artifactId>
                    <version>${htmlcompressor.plugin}</version>
                    <configuration>
                        <compressCss>true</compressCss>
                        <compressJavaScript>true</compressJavaScript>
                        <javascriptHtmlSprite>false</javascriptHtmlSprite>
                        <removeIntertagSpaces>true</removeIntertagSpaces>
                        <srcFolder>${project.basedir}/src/main/resources</srcFolder>
                        <targetFolder>${project.basedir}/target/classes</targetFolder>
                        <yuiJsNoMunge>true</yuiJsNoMunge>
                        <fileExtensions>
                            <fileExtension>html</fileExtension>
                            <fileExtension>jsp</fileExtension>
                            <fileExtension>jspx</fileExtension>
                            <fileExtension>xhtml</fileExtension>
                            <fileExtension>xml</fileExtension>
                            <fileExtension>xsd</fileExtension>
                            <fileExtension>xslt</fileExtension>
                            <fileExtension>wsdl</fileExtension>
                        </fileExtensions>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.github.hazendaz</groupId>
                            <artifactId>htmlcompressor</artifactId>
                            <version>${htmlcompressor.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.yahoo.platform.yui</groupId>
                            <artifactId>yuicompressor</artifactId>
                            <version>${yuicompressor.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>com.github.hazendaz.maven</groupId>
                    <artifactId>whitespace-maven-plugin</artifactId>
                    <version>${whitespace.plugin}</version>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.plugin}</version>
                    <configuration>
                        <rules>
                            <rule>
                                <element>BUNDLE</element>
                                <limits>
                                    <limit>
                                        <counter>COMPLEXITY</counter>
                                        <value>COVEREDRATIO</value>
                                        <minimum>${jacoco.minimum.coverage}</minimum>
                                    </limit>
                                </limits>
                            </rule>
                        </rules>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.github.hazendaz.maven</groupId>
                    <artifactId>coveralls-maven-plugin</artifactId>
                    <version>${coveralls.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.ekryd.sortpom</groupId>
                    <artifactId>sortpom-maven-plugin</artifactId>
                    <version>${sortpom.plugin}</version>
                    <configuration>
                        <createBackupFile>false</createBackupFile>
                        <expandEmptyElements>false</expandEmptyElements>
                        <keepBlankLines>true</keepBlankLines>
                        <nrOfIndentSpace>4</nrOfIndentSpace>
                        <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
                        <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.github.hazendaz.maven</groupId>
                    <artifactId>yuicompressor-maven-plugin</artifactId>
                    <version>${yuicompressor.plugin}</version>
                    <configuration>
                        <nomunge>true</nomunge>
                        <nosuffix>true</nosuffix>
                        <excludes>
                            <exclude>**/*.min.js</exclude>
                            <exclude>**/*.min.css</exclude>
                        </excludes>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.yahoo.platform.yui</groupId>
                            <artifactId>yuicompressor</artifactId>
                            <version>${yuicompressor.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>net.revelc.code.formatter</groupId>
                    <artifactId>formatter-maven-plugin</artifactId>
                    <version>${formatter.plugin}</version>
                    <configuration>
                        <configFile>eclipse-formatter-config-4space.xml</configFile>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.github.hazendaz</groupId>
                            <artifactId>build-tools</artifactId>
                            <version>${build-tools.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>net.revelc.code</groupId>
                    <artifactId>impsort-maven-plugin</artifactId>
                    <version>${impsort.plugin}</version>
                    <configuration>
                        <groups>au,ch,com,de,dev,edu,io,jakarta,java,javassist,javax,lombok,mockit,net,nl,ognl,oracle,org,oshi,waffle</groups>
                        <staticGroups>java,*</staticGroups>
                        <removeUnused>true</removeUnused>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${license.plugin}</version>
                    <configuration>
                        <licenseSets>
                            <licenseSet>
                                <header>${main.basedir}/LICENSE_HEADER</header>
                                <!-- Default excludes located at https://github.com/mathieucarbou/license-maven-plugin/blob/master/license-maven-plugin/src/main/java/com/mycila/maven/plugin/license/Default.java -->
                                <excludes>
                                    <!-- TODO: Get rest of this moved to license plugin -->
                                    <exclude>**/spring.provides</exclude>
                                </excludes>
                            </licenseSet>
                        </licenseSets>
                        <prohibitLegacyUse>true</prohibitLegacyUse>
                        <!-- TODO: Get rest of this moved to license plugin -->
                        <mapping>
                            <conf>DOUBLESLASH_STYLE</conf>
                            <policy>DOUBLESLASH_STYLE</policy>
                        </mapping>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.mycila</groupId>
                            <artifactId>license-maven-plugin-git</artifactId>
                            <version>${license.plugin}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- Report Only -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>${jxr.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${project-info-reports.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${surefire.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>taglist-maven-plugin</artifactId>
                    <version>${taglist.plugin}</version>
                    <configuration>
                        <tagListOptions>
                            <tagClasses>
                                <tagClass>
                                    <displayName>FIXME Work</displayName>
                                    <tags>
                                        <tag>
                                            <matchString>fixme</matchString>
                                            <matchType>ignoreCase</matchType>
                                        </tag>
                                        <tag>
                                            <matchString>@fixme</matchString>
                                            <matchType>ignoreCase</matchType>
                                        </tag>
                                    </tags>
                                </tagClass>
                                <tagClass>
                                    <displayName>Todo Work</displayName>
                                    <tags>
                                        <tag>
                                            <matchString>todo</matchString>
                                            <matchType>ignoreCase</matchType>
                                        </tag>
                                        <tag>
                                            <matchString>@todo</matchString>
                                            <matchType>ignoreCase</matchType>
                                        </tag>
                                    </tags>
                                </tagClass>
                                <tagClass>
                                    <displayName>Deprecated Work</displayName>
                                    <tags>
                                        <tag>
                                            <matchString>@deprecated</matchString>
                                            <matchType>ignoreCase</matchType>
                                        </tag>
                                    </tags>
                                </tagClass>
                            </tagClasses>
                        </tagListOptions>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions.plugin}</version>
                </plugin>

                <!-- Sonar -->
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar.plugin}</version>
                </plugin>

                <!-- Openwrite Maven Plugins -->
                <plugin>
                    <groupId>org.openrewrite.maven</groupId>
                    <artifactId>rewrite-maven-plugin</artifactId>
                    <version>${rewrite.plugin}</version>
                </plugin>

                <!-- Owasp Dependency Scan -->
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check.plugin}</version>
                    <configuration>
                        <failOnError>false</failOnError>
                        <nvdApiServerId>nvd</nvdApiServerId>
                    </configuration>
                </plugin>

                <!-- Find maven root -->
                <plugin>
                    <groupId>com.github.hazendaz.maven</groupId>
                    <artifactId>directory-maven-plugin</artifactId>
                    <version>${directory.plugin}</version>
                </plugin>

                <!-- Modernizer -->
                <plugin>
                    <groupId>org.gaul</groupId>
                    <artifactId>modernizer-maven-plugin</artifactId>
                    <version>${modernizer.plugin}</version>
                    <configuration>
                        <javaVersion>${maven.compiler.release}</javaVersion>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.ow2.asm</groupId>
                            <artifactId>asm</artifactId>
                            <version>${asm.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- Sonatype Provided Plugins -->
                <plugin>
                    <groupId>org.sonatype.central</groupId>
                    <artifactId>central-publishing-maven-plugin</artifactId>
                    <version>${central-publishing.plugin}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <publishingServerId>central</publishingServerId>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Build Plugins -->
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>git-commit-id</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>

            <!-- Packaging types / Tools -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-jars</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Reporting Plugins -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Tools -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>enforce-clean</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <phase>pre-clean</phase>
                    </execution>
                    <execution>
                        <id>enforce-site</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <phase>pre-site</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Find maven root -->
            <plugin>
                <groupId>com.github.hazendaz.maven</groupId>
                <artifactId>directory-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>directories</id>
                        <goals>
                            <goal>highest-basedir</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <property>main.basedir</property>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Checkstyle dependencies required here or they won't be used (per maven) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                            <goal>cpd-check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>modernizer</id>
                        <goals>
                            <goal>modernizer</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>

            <!-- Sonatype Provided Plugins -->
            <plugin>
                <groupId>org.sonatype.central</groupId>
                <artifactId>central-publishing-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <publishingServerId>central</publishingServerId>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                            <report>checkstyle-aggregate</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>aggregate-cpd</report>
                            <report>aggregate-pmd</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <!-- select non-aggregate reports -->
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!-- This plugin will fail if any POM is marked as Byte Order Mark is UTF-8 (BOM).
                If this occurs, remove the byte order mark (bom). -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>aggregate</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>checks</id>
            <build>
                <plugins>
                    <!-- Reporting Plugins -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>check</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>compression</id>
            <activation>
                <file>
                    <exists>${project.basedir}/compression.xml</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.hazendaz.maven</groupId>
                        <artifactId>htmlcompressor-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-compile</id>
                                <goals>
                                    <goal>html</goal>
                                </goals>
                                <phase>compile</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.hazendaz.maven</groupId>
                        <artifactId>yuicompressor-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-compile</id>
                                <goals>
                                    <goal>compress</goal>
                                </goals>
                                <phase>compile</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>coveralls</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <version>${jacoco.plugin}</version>
                            <!-- TODO: Due to coveralls having issue with jacoco line on method in these classes, skip it from coverage metrics until another solution determined. -->
                            <configuration>
                                <excludes>
                                    <exclude>**/*MixedAuthenticator.class</exclude>
                                    <exclude>**/*NegotiateAuthenticator.class</exclude>
                                    <exclude>**/*WaffleAuthenticatorBase.class</exclude>
                                    <exclude>**/*WindowsLoginModule.class</exclude>
                                    <exclude>**/*WindowsRealm.class</exclude>
                                </excludes>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>eclipse</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <properties>
                <!-- Make m2e use java at test revision level -->
                <maven.compiler.source>${java.test.version}</maven.compiler.source>
                <maven.compiler.target>${java.test.version}</maven.compiler.target>
                <maven.compiler.release>${java.test.release.version}</maven.compiler.release>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <!-- Keep version here as fake version and maven report info has problems defining it in dependency management -->
                            <version>${lifecycle.version}</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <!-- impsort m2e in plugin states to ignore, we will process -->
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>net.revelc.code</groupId>
                                                <artifactId>impsort-maven-plugin</artifactId>
                                                <versionRange>[${impsort.plugin},)</versionRange>
                                                <goals>
                                                    <goal>sort</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <execute>
                                                    <runOnConfiguration>true</runOnConfiguration>
                                                    <runOnIncremental>true</runOnIncremental>
                                                </execute>
                                            </action>
                                        </pluginExecution>

                                        <!-- Continue to run license plugin with m2e, its in plugin now but disabled there so this ensures it runs. -->
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>com.mycila</groupId>
                                                <artifactId>license-maven-plugin</artifactId>
                                                <versionRange>[${license.plugin},)</versionRange>
                                                <goals>
                                                    <goal>format</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <execute>
                                                    <runOnConfiguration>true</runOnConfiguration>
                                                    <runOnIncremental>true</runOnIncremental>
                                                </execute>
                                            </action>
                                        </pluginExecution>

                                        <!-- rewrite m2e in plugin missing, we will process -->
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.openrewrite.maven</groupId>
                                                <artifactId>rewrite-maven-plugin</artifactId>
                                                <versionRange>[${rewrite.plugin},)</versionRange>
                                                <goals>
                                                    <goal>run</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore />
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>format</id>
            <activation>
                <file>
                    <exists>${project.basedir}/format.xml</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.revelc.code.formatter</groupId>
                        <artifactId>formatter-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>format</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.revelc.code</groupId>
                        <artifactId>impsort-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>sort</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.openrewrite.maven</groupId>
                        <artifactId>rewrite-maven-plugin</artifactId>
                        <configuration>
                            <activeRecipes>
                                <recipe>org.openrewrite.java.RemoveUnusedImports</recipe>
                            </activeRecipes>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>process-sources</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.ekryd.sortpom</groupId>
                        <artifactId>sortpom-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>sort</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.diffplug.spotless</groupId>
                        <artifactId>spotless-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>apply</goal>
                                </goals>
                                <phase>process-sources</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.hazendaz.maven</groupId>
                        <artifactId>whitespace-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>trim</goal>
                                </goals>
                                <phase>process-sources</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>jdk17on</id>
            <activation>
                <jdk>[17,)</jdk>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-compiler-plugin</artifactId>
                            <configuration>
                                <fork>true</fork>
                                <compilerArgs combine.children="append">
                                    <!-- Error Prone Needs -->
                                    <compilerArg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</compilerArg>
                                    <compilerArg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</compilerArg>
                                    <compilerArg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</compilerArg>
                                    <compilerArg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</compilerArg>
                                    <compilerArg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</compilerArg>
                                    <compilerArg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</compilerArg>
                                    <compilerArg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</compilerArg>
                                    <compilerArg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</compilerArg>
                                    <compilerArg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</compilerArg>
                                    <compilerArg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</compilerArg>
                                </compilerArgs>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Skip license plugin during release as maven release is now shallow cloned -->
                    <plugin>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <!-- deploy site with maven-scm-publish-plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-scm-publish-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>scm-publish</id>
                                <goals>
                                    <goal>publish-scm</goal>
                                </goals>
                                <phase>site-deploy</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
